package backup

//saveButton := widget.NewButton("Save Files (to main.go_bk folder or input.json folder)", func() {
	//	err = io.Save("", output)
	//	if err != nil {
	//		cursorRow.SetText(err.Error())
	//	} else {
	//		cursorRow.SetText("Files Created On Disk")
	//	}
	//})
	//saveButton.Hidden = true // return to false when implement
	//zipButton := widget.NewButton("Save Zip (to main.go_bk folder or input.json folder)", func() {
	//	err := code_generate_core.OutputStructToZip()
	//	if err != "" {
	//		cursorRow.SetText(err)
	//	} else {
	//		cursorRow.SetText("Zip Created On Disk")
	//	}
	//})
	//zipAsButton := widget.NewButton("Generate And Zip From Metadata Json As...", func() {
	//	cursorRow.SetText("Creating Zip File...")
	//	err := code_generate_core.OutputStructToZip()
	//	if err != "" {
	//		cursorRow.SetText(err)
	//	} else {
	//		cursorRow.SetText("Zip Created On Disk")
	//	}
	//})


	////TODO: Add Java generator
	//javaFilesGenerator := widget.NewButton("Generate Java Files from Json...", func() {
	//	err := project.JavaFilesGenerator(app, cachePath)
	//	if err == nil {
	//		db.ShowWindows(app, "Success", "Generated Java Files Successfully")
	//	} else {
	//		cursorRow.SetText(err.Error())
	//	}
	//})
	//javaFilesGenerator.Hidden = true // return to false when implement



	//scroll := container.NewVScroll(outputJson)
    	//vBox.Append(zipAsButton)
    	//vBox2.Add(largeText)

    	//statusBar := container.NewPadded(
    	//	widget.NewLabel("Template Directory:"),
    	//	tmplEntry,
    	//	widget.NewLabel("Status:"),
    	//	cursorRow,
    	//)
    	//l := layout.NewGridLayout(2)